DROP TABLE IF EXISTS
users, rating, films, friends, likes, genres, film_genre;

CREATE TABLE IF NOT EXISTS users (
    	user_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  		email varchar NOT NULL,
  		login varchar NOT NULL,
  		name varchar NOT NULL,
    	birthday date
);

CREATE TABLE IF NOT EXISTS rating (
	rating_mpa_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  	rating_mpa_name varchar
);

CREATE TABLE IF NOT EXISTS films (
    	film_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    	name varchar,
    	description varchar(255) NOT NULL,
    	release_date date NOT NULL,
   		duration integer,
    	rating_mpa INTEGER REFERENCES rating(rating_mpa_id)
);

CREATE TABLE IF NOT EXISTS friends (
	user_id INTEGER references users(user_id),
  	friend_id INTEGER references users(user_id),
	is_approved boolean DEFAULT false,
 	PRIMARY KEY (user_id, friend_id)
);

CREATE TABLE IF NOT EXISTS likes (
  	film_id INTEGER REFERENCES films(film_id),
  	user_id INTEGER references users(user_id),
  	PRIMARY KEY (film_id, user_id)
);

CREATE TABLE IF NOT EXISTS genres (
  	genre_id INTEGER GENERATED BY DEFAULT AS IDENTITY primary key,
  	genre_name varchar
);

CREATE TABLE IF NOT EXISTS film_genre (
  	film_id INTEGER REFERENCES films(film_id) ON DELETE CASCADE,
  	genre_id INTEGER references genres(genre_id) ON DELETE CASCADE,
  	PRIMARY KEY (film_id, genre_id)
);